// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Standard Edition"

// DATE "10/17/2023 16:14:09"

// 
// Device: Altera EP4CE15F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter (
	clk,
	rest,
	count);
input 	clk;
input 	rest;
output 	[7:0] count;

// Design Ports Information
// count[0]	=>  Location: PIN_T5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[1]	=>  Location: PIN_R6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[2]	=>  Location: PIN_T4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[3]	=>  Location: PIN_V3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[4]	=>  Location: PIN_V4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[5]	=>  Location: PIN_P6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[6]	=>  Location: PIN_P7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count[7]	=>  Location: PIN_R5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_G1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// rest	=>  Location: PIN_T2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("counter_8_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \count[0]~output_o ;
wire \count[1]~output_o ;
wire \count[2]~output_o ;
wire \count[3]~output_o ;
wire \count[4]~output_o ;
wire \count[5]~output_o ;
wire \count[6]~output_o ;
wire \count[7]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \count[0]~21_combout ;
wire \rest~input_o ;
wire \rest~inputclkctrl_outclk ;
wire \count[0]~reg0_q ;
wire \count[1]~7_combout ;
wire \count[1]~reg0_q ;
wire \count[1]~8 ;
wire \count[2]~9_combout ;
wire \count[2]~reg0_q ;
wire \count[2]~10 ;
wire \count[3]~11_combout ;
wire \count[3]~reg0_q ;
wire \count[3]~12 ;
wire \count[4]~13_combout ;
wire \count[4]~reg0_q ;
wire \count[4]~14 ;
wire \count[5]~15_combout ;
wire \count[5]~reg0_q ;
wire \count[5]~16 ;
wire \count[6]~17_combout ;
wire \count[6]~reg0_q ;
wire \count[6]~18 ;
wire \count[7]~19_combout ;
wire \count[7]~reg0_q ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y3_N2
cycloneive_io_obuf \count[0]~output (
	.i(\count[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[0]~output .bus_hold = "false";
defparam \count[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y3_N9
cycloneive_io_obuf \count[1]~output (
	.i(\count[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[1]~output .bus_hold = "false";
defparam \count[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N23
cycloneive_io_obuf \count[2]~output (
	.i(\count[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[2]~output .bus_hold = "false";
defparam \count[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N2
cycloneive_io_obuf \count[3]~output (
	.i(\count[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[3]~output .bus_hold = "false";
defparam \count[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y5_N23
cycloneive_io_obuf \count[4]~output (
	.i(\count[4]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[4]~output .bus_hold = "false";
defparam \count[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N9
cycloneive_io_obuf \count[5]~output (
	.i(\count[5]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[5]~output .bus_hold = "false";
defparam \count[5]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y5_N2
cycloneive_io_obuf \count[6]~output (
	.i(\count[6]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[6]~output .bus_hold = "false";
defparam \count[6]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N16
cycloneive_io_obuf \count[7]~output (
	.i(\count[7]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \count[7]~output .bus_hold = "false";
defparam \count[7]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y14_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N0
cycloneive_lcell_comb \count[0]~21 (
// Equation(s):
// \count[0]~21_combout  = !\count[0]~reg0_q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\count[0]~reg0_q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\count[0]~21_combout ),
	.cout());
// synopsys translate_off
defparam \count[0]~21 .lut_mask = 16'h0F0F;
defparam \count[0]~21 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y14_N15
cycloneive_io_ibuf \rest~input (
	.i(rest),
	.ibar(gnd),
	.o(\rest~input_o ));
// synopsys translate_off
defparam \rest~input .bus_hold = "false";
defparam \rest~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \rest~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\rest~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\rest~inputclkctrl_outclk ));
// synopsys translate_off
defparam \rest~inputclkctrl .clock_type = "global clock";
defparam \rest~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y4_N1
dffeas \count[0]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count[0]~21_combout ),
	.asdata(vcc),
	.clrn(\rest~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[0]~reg0 .is_wysiwyg = "true";
defparam \count[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N12
cycloneive_lcell_comb \count[1]~7 (
// Equation(s):
// \count[1]~7_combout  = (\count[1]~reg0_q  & (\count[0]~reg0_q  $ (VCC))) # (!\count[1]~reg0_q  & (\count[0]~reg0_q  & VCC))
// \count[1]~8  = CARRY((\count[1]~reg0_q  & \count[0]~reg0_q ))

	.dataa(\count[1]~reg0_q ),
	.datab(\count[0]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\count[1]~7_combout ),
	.cout(\count[1]~8 ));
// synopsys translate_off
defparam \count[1]~7 .lut_mask = 16'h6688;
defparam \count[1]~7 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N13
dffeas \count[1]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count[1]~7_combout ),
	.asdata(vcc),
	.clrn(\rest~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[1]~reg0 .is_wysiwyg = "true";
defparam \count[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N14
cycloneive_lcell_comb \count[2]~9 (
// Equation(s):
// \count[2]~9_combout  = (\count[2]~reg0_q  & (!\count[1]~8 )) # (!\count[2]~reg0_q  & ((\count[1]~8 ) # (GND)))
// \count[2]~10  = CARRY((!\count[1]~8 ) # (!\count[2]~reg0_q ))

	.dataa(gnd),
	.datab(\count[2]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\count[1]~8 ),
	.combout(\count[2]~9_combout ),
	.cout(\count[2]~10 ));
// synopsys translate_off
defparam \count[2]~9 .lut_mask = 16'h3C3F;
defparam \count[2]~9 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N15
dffeas \count[2]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count[2]~9_combout ),
	.asdata(vcc),
	.clrn(\rest~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[2]~reg0 .is_wysiwyg = "true";
defparam \count[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N16
cycloneive_lcell_comb \count[3]~11 (
// Equation(s):
// \count[3]~11_combout  = (\count[3]~reg0_q  & (\count[2]~10  $ (GND))) # (!\count[3]~reg0_q  & (!\count[2]~10  & VCC))
// \count[3]~12  = CARRY((\count[3]~reg0_q  & !\count[2]~10 ))

	.dataa(gnd),
	.datab(\count[3]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\count[2]~10 ),
	.combout(\count[3]~11_combout ),
	.cout(\count[3]~12 ));
// synopsys translate_off
defparam \count[3]~11 .lut_mask = 16'hC30C;
defparam \count[3]~11 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N17
dffeas \count[3]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count[3]~11_combout ),
	.asdata(vcc),
	.clrn(\rest~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[3]~reg0 .is_wysiwyg = "true";
defparam \count[3]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N18
cycloneive_lcell_comb \count[4]~13 (
// Equation(s):
// \count[4]~13_combout  = (\count[4]~reg0_q  & (!\count[3]~12 )) # (!\count[4]~reg0_q  & ((\count[3]~12 ) # (GND)))
// \count[4]~14  = CARRY((!\count[3]~12 ) # (!\count[4]~reg0_q ))

	.dataa(gnd),
	.datab(\count[4]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\count[3]~12 ),
	.combout(\count[4]~13_combout ),
	.cout(\count[4]~14 ));
// synopsys translate_off
defparam \count[4]~13 .lut_mask = 16'h3C3F;
defparam \count[4]~13 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N19
dffeas \count[4]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count[4]~13_combout ),
	.asdata(vcc),
	.clrn(\rest~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[4]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[4]~reg0 .is_wysiwyg = "true";
defparam \count[4]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N20
cycloneive_lcell_comb \count[5]~15 (
// Equation(s):
// \count[5]~15_combout  = (\count[5]~reg0_q  & (\count[4]~14  $ (GND))) # (!\count[5]~reg0_q  & (!\count[4]~14  & VCC))
// \count[5]~16  = CARRY((\count[5]~reg0_q  & !\count[4]~14 ))

	.dataa(gnd),
	.datab(\count[5]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\count[4]~14 ),
	.combout(\count[5]~15_combout ),
	.cout(\count[5]~16 ));
// synopsys translate_off
defparam \count[5]~15 .lut_mask = 16'hC30C;
defparam \count[5]~15 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N21
dffeas \count[5]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count[5]~15_combout ),
	.asdata(vcc),
	.clrn(\rest~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[5]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[5]~reg0 .is_wysiwyg = "true";
defparam \count[5]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N22
cycloneive_lcell_comb \count[6]~17 (
// Equation(s):
// \count[6]~17_combout  = (\count[6]~reg0_q  & (!\count[5]~16 )) # (!\count[6]~reg0_q  & ((\count[5]~16 ) # (GND)))
// \count[6]~18  = CARRY((!\count[5]~16 ) # (!\count[6]~reg0_q ))

	.dataa(\count[6]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\count[5]~16 ),
	.combout(\count[6]~17_combout ),
	.cout(\count[6]~18 ));
// synopsys translate_off
defparam \count[6]~17 .lut_mask = 16'h5A5F;
defparam \count[6]~17 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N23
dffeas \count[6]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count[6]~17_combout ),
	.asdata(vcc),
	.clrn(\rest~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[6]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[6]~reg0 .is_wysiwyg = "true";
defparam \count[6]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N24
cycloneive_lcell_comb \count[7]~19 (
// Equation(s):
// \count[7]~19_combout  = \count[6]~18  $ (!\count[7]~reg0_q )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\count[7]~reg0_q ),
	.cin(\count[6]~18 ),
	.combout(\count[7]~19_combout ),
	.cout());
// synopsys translate_off
defparam \count[7]~19 .lut_mask = 16'hF00F;
defparam \count[7]~19 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N25
dffeas \count[7]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\count[7]~19_combout ),
	.asdata(vcc),
	.clrn(\rest~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\count[7]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \count[7]~reg0 .is_wysiwyg = "true";
defparam \count[7]~reg0 .power_up = "low";
// synopsys translate_on

assign count[0] = \count[0]~output_o ;

assign count[1] = \count[1]~output_o ;

assign count[2] = \count[2]~output_o ;

assign count[3] = \count[3]~output_o ;

assign count[4] = \count[4]~output_o ;

assign count[5] = \count[5]~output_o ;

assign count[6] = \count[6]~output_o ;

assign count[7] = \count[7]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_D1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_K2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_K1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_K22,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
